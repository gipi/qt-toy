name: Cross compilation

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  cross_compilation_jobs:
    # The host should always be Linux
    runs-on: ubuntu-20.04
    name: Build on ${{ matrix.arch }}
    # Run steps on a matrix of 3 arch/distro combinations
    strategy:
      fail-fast: false
      matrix:
        arch:
          - aarch64
          - ppc64le
          - s390x

    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2
        name: Build artifacts
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: ubuntu20.04
          # Create an artifacts directory
          setup: |
            mkdir -p "/tmp/artifacts"

          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "/tmp/artifacts:/artifacts"

          install: |
            apt update
            apt install -y build-essential cmake qtbase5-dev qtdeclarative5-dev qttools5-dev qml-module-qtquick-controls2

          run: |
            cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
            cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
            strip ${{github.workspace}}/build/Specimen
            file ${{github.workspace}}/build/Specimen
            cp -v ${{github.workspace}}/build/Specimen /artifacts/Specimen_${{ matrix.arch }}

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest-${{ matrix.arch }}"
          prerelease: true
          title: "Build ${{ matrix.arch }}"
          files: |
            /tmp/artifacts/Specimen_${{ matrix.arch }}


